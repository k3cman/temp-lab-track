{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app/app.module.ts","webpack:///external commonjs \"tslib\"","webpack:///./src/app/app.controller.ts","webpack:///./src/app/app.service.ts","webpack:///external commonjs \"@nestjs/typeorm\"","webpack:///./src/app/entities/user.entity.ts","webpack:///external commonjs \"typeorm\"","webpack:///./src/app/modules/users/user.module.ts","webpack:///./src/app/modules/users/user.controller.ts","webpack:///./src/app/modules/users/user.service.ts","webpack:///external commonjs \"bcryptjs\"","webpack:///./src/auth/auth.module.ts","webpack:///./src/auth/auth.service.ts","webpack:///external commonjs \"@nestjs/jwt\"","webpack:///./src/auth/auth.controller.ts","webpack:///external commonjs \"@nestjs/passport\"","webpack:///./src/auth/jwt.strategy.ts","webpack:///external commonjs \"passport-jwt\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\nimport { UserModule } from './modules/users/user.module';\nimport { AuthModule } from '../auth/auth.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'sqlite',\n      database: '.db/data.sqlite3',\n      entities: [__dirname + '/**/*.entity{.ts,.js}', User],\n      synchronize: true,\n    }),\n    UserModule,\n    AuthModule\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n","module.exports = require(\"tslib\");","import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData();\n  }\n}\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Hello API' };\n  }\n}\n","module.exports = require(\"@nestjs/typeorm\");","import { Column, Entity, PrimaryGeneratedColumn } from \"typeorm\";\r\n\r\n@Entity()\r\nexport class User {\r\n    @PrimaryGeneratedColumn()\r\n    id:number;\r\n\r\n    @Column({ unique: true })\r\n    username: string;\r\n\r\n    @Column()\r\n    password: string;\r\n\r\n    @Column({ default: 'user' })\r\n    role: string; // For authorization, e.g., 'user', 'admin'\r\n}","module.exports = require(\"typeorm\");","import { Module } from \"@nestjs/common\";\r\nimport { UserController } from \"./user.controller\";\r\nimport { UserService } from \"./user.service\";\r\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\r\nimport { User } from \"../../entities/user.entity\";\r\n\r\n@Module({\r\n    imports: [\r\n    TypeOrmModule.forFeature([User]),\r\n    ],\r\n    controllers: [UserController],\r\n    providers: [UserService],\r\n    exports: [TypeOrmModule, UserService]\r\n})\r\nexport class UserModule {}","import { Controller } from \"@nestjs/common\";\r\nimport exp from \"constants\";\r\n\r\n@Controller('users')\r\nexport class UserController {\r\n    \r\n}","import { Injectable } from \"@nestjs/common\";\r\nimport { InjectRepository } from \"@nestjs/typeorm\";\r\nimport { User } from \"../../entities/user.entity\";\r\nimport { Repository } from \"typeorm\";\r\nimport * as bcrypt from \"bcryptjs\";\r\n\r\n@Injectable()\r\nexport class UserService {\r\n    constructor(\r\n        @InjectRepository(User)\r\n        private userRepository: Repository<User>,\r\n    ) {}\r\n\r\n    async create(user: User){\r\n        const salt = await bcrypt.genSalt();\r\n        user.password = await bcrypt.hash(user.password, salt);\r\n        return this.userRepository.save(user);\r\n    }\r\n\r\n    async findByUsername(username: string): Promise<User | undefined> {\r\n        return this.userRepository.findOne({ where: { username } });\r\n      }\r\n\r\n    async validateUser(username: string, pass: string): Promise<User | null> {\r\n        const user = await this.findByUsername(username);\r\n        if (user && (await bcrypt.compare(pass, user.password))) {\r\n          return user; // Password matches\r\n        }\r\n        return null; // Invalid credentials\r\n      } \r\n}","module.exports = require(\"bcryptjs\");","import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { UserModule } from '../app/modules/users/user.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports :[\n    UserModule,\n    PassportModule,\n    JwtModule.register({\n      secret: 'k3cm4n',\n      signOptions: { expiresIn: '1d' },\n    })\n  ],\n  providers: [AuthService, JwtStrategy],\n  controllers: [AuthController]\n})\nexport class AuthModule {}\n","import { Injectable } from '@nestjs/common';\r\nimport { JwtService } from '@nestjs/jwt';\r\nimport { UserService } from '../app/modules/users/user.service';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n    constructor(\r\n        private userService: UserService,\r\n        private jwtService: JwtService,\r\n      ) {}\r\n\r\n      async validateUser(username: string, pass: string): Promise<any> {\r\n        const user = await this.userService.validateUser(username, pass);\r\n        if (user) {\r\n          const accessToken = this.jwtService.sign({ username: user.username });\r\n          return { accessToken };\r\n        }\r\n        return null;\r\n      }\r\n\r\n      async login(user) {\r\n        const payload = { username: user.username, sub: user.id };\r\n        return {\r\n          accessToken: this.jwtService.sign(payload),\r\n        };\r\n      }\r\n}\r\n","module.exports = require(\"@nestjs/jwt\");","import { Body, Controller, Post } from '@nestjs/common';\r\nimport { UserService } from '../app/modules/users/user.service';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Controller('auth')\r\nexport class AuthController {\r\n    constructor(\r\n        private authService: AuthService,\r\n        private userService: UserService,\r\n      ) {}\r\n    \r\n      @Post('register')\r\n      async register(@Body() user: any) {\r\n        return this.userService.create(user);\r\n      }\r\n    \r\n      @Post('login')\r\n      async login(@Body() req: any) {\r\n        const user = await this.authService.validateUser(req.username, req.password);\r\n        if (!user) {\r\n          throw new Error('Invalid credentials');\r\n        }\r\n        return this.authService.login(user);\r\n      }\r\n}\r\n","module.exports = require(\"@nestjs/passport\");","import { Injectable } from \"@nestjs/common\";\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { ExtractJwt, Strategy } from 'passport-jwt';\r\n\r\n@Injectable()\r\nexport class JwtStrategy extends PassportStrategy(Strategy) {\r\n    constructor(){\r\n        super({\r\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n            secretOrKey: 'k3cm4n',\r\n        });\r\n    }\r\n\r\n    async validate(payload: any) {\r\n        return { userId: payload.sub, username: payload.username };\r\n    }\r\n}\r\n\r\n","module.exports = require(\"passport-jwt\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule, {cors: true});\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3000;\n  await app.listen(port);\n  Logger.log(\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}